@page "/weather"
@using Microsoft.AspNetCore.Authorization
@using Shared.Auth
@using Shared.WeatherApi
@inject HttpClient Http
@attribute [Authorize(Policy = PolicyConstants.GetWeather)]

<PageTitle>Weather</PageTitle>

<h2>List of all weather forecasts</h2>
@if (WeatherForecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Date</th>
                <th aria-label="Temperature in Celsius">Temp. (C)</th>
                <th aria-label="Temperature in Farenheit">Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in WeatherForecasts)
            {
                <tr>
                    <td>@forecast.Id</td>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

<br />

<h2>Weather forecast selected by Id (@SelectedWeatherForecastId)</h2>
@if (WeatherForecast == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Date</th>
                <th aria-label="Temperature in Celsius">Temp. (C)</th>
                <th aria-label="Temperature in Farenheit">Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@WeatherForecast.Id</td>
                <td>@WeatherForecast.Date.ToShortDateString()</td>
                <td>@WeatherForecast.TemperatureC</td>
                <td>@WeatherForecast.TemperatureF</td>
                <td>@WeatherForecast.Summary</td>
            </tr>
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? WeatherForecasts { get; set; }
    private WeatherForecast? WeatherForecast { get; set; }
    private int SelectedWeatherForecastId { get; set; } = 2;

    protected override async Task OnInitializedAsync()
    {
        WeatherForecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("weather-api/weatherforecast/predictions");
        WeatherForecast = await Http.GetFromJsonAsync<WeatherForecast>($"weather-api/weatherforecast/predictions/{SelectedWeatherForecastId}");
    }
}
